@page "/orders/create"
@using Microsoft.EntityFrameworkCore
@using EStore.Business.DTOs
@using EStore.Business.Services.IServices
@inject IOrderService OrderService
@inject IMemberService MemberService
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

<PageTitle>Create</PageTitle>

<div class="container py-4">
    <h3 class="my-4">Create Order</h3>
    <div class="row">
        <div class="col-md-6">
            @if (!string.IsNullOrEmpty(ErrorMessage))
            {
                <div class="alert alert-danger">@ErrorMessage</div>
            }

            <EditForm Model="OrderDTO" OnValidSubmit="CreateOrder" FormName="CreateOrderForm">
                <DataAnnotationsValidator/>
                <ValidationSummary class="text-danger" role="alert"/>

                <div class="mb-3">
                    <label for="memberemail" class="form-label">Member Email:</label>
                    <select id="memberemail" @bind="OrderDTO.MemberEmail" class="form-control">
                        <option value="" selected disabled>Select a member</option>
                        @foreach (var member in members)
                        {
                            <option value="@member.Email">@member.Email</option>
                        }
                    </select>
                    <ValidationMessage For="() => OrderDTO.MemberEmail" class="text-danger"/>
                </div>

                <div class="mb-3">
                    <label class="form-label">Select Products:</label>
                    <div class="table-responsive">
                        <table class="table">
                            <thead>
                            <tr>
                                <th>Product</th>
                                <th>Unit Price</th>
                                <th>Stock</th>
                                <th>Quantity</th>
                                <th>Discount</th>
                                <th></th>
                            </tr>
                            </thead>
                            <tbody>
                            @foreach (var detail in OrderDTO.OrderDetails)
                            {
                                <tr>
                                    <td>
                                        <select @bind="detail.ProductId" class="form-control">
                                            @foreach (var product in AvailableProducts)
                                            {
                                                <option value="@product.ProductId">@product.ProductName</option>
                                            }
                                        </select>
                                    </td>
                                    <td>@AvailableProducts.FirstOrDefault(p => p.ProductId == detail.ProductId)?.UnitPrice</td>
                                    <td>@AvailableProducts.FirstOrDefault(p => p.ProductId == detail.ProductId)?.UnitslnStock</td>
                                    <td>
                                        <input type="number" class="form-control" @bind="detail.Quantity" min="1"/>
                                    </td>
                                    <td>
                                        <input type="number" class="form-control" @bind="detail.Discount" min="0"/>
                                    </td>
                                    <td>
                                        <button type="button" class="btn btn-danger" @onclick="() => RemoveProduct(detail)">Remove</button>
                                    </td>
                                </tr>
                            }
                            </tbody>
                        </table>
                        <button type="button" class="btn btn-success" @onclick="AddProduct">Add Product</button>
                    </div>
                </div>

                <div class="mt-5">
                    <button type="submit" class="btn btn-primary">Create Order</button> |
                    <a href="/orders" class="btn btn-secondary">Back to List</a>
                </div>
                
                
            </EditForm>
        </div>
    </div>

   
</div>

@code {
    private OrderDTO OrderDTO = new() { OrderDetails = new List<OrderDetailDTO>() };
    private List<MemberDTO> members = new();
    private List<CreateProductOrderDTO> AvailableProducts = new();
    private string ErrorMessage = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        members = await MemberService.GetAllMembersAsync();
        AvailableProducts = await OrderService.GetAvailableProductsAsync();
    }

    private async Task CreateOrder()
    {
        if (!OrderDTO.OrderDetails.Any()) ErrorMessage = "Plese select product!";

        try
        {
            await OrderService.CreateOrderAsync(OrderDTO);
            NavigationManager.NavigateTo("/orders");
        }
        catch (Exception ex)
        {
            ErrorMessage = ex.Message;
        }
    }

    private void AddProduct()
    {
        OrderDTO.OrderDetails.Add(new OrderDetailDTO());
    }

    private void RemoveProduct(OrderDetailDTO detail)
    {
        OrderDTO.OrderDetails.Remove(detail);
    }

}