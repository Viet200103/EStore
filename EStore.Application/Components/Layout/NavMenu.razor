@inject NavigationManager Navigation
@inject AuthenticationStateProvider AuthenticationStateProvider
@using Microsoft.AspNetCore.Components.Authorization

<nav class="navbar navbar-expand-sm navbar-toggleable-sm border-bottom box-shadow mb-3">
    <div class="container">
        <a class="navbar-brand non-underline text-dark fs-6 fw-bold" href="/">EStore</a>

        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>

        <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
            <ul class="navbar-nav flex-grow-1">
                @* List menu item*@
            </ul>
            <ul class="navbar-nav d-flex align-items-center gap-2">
                @if (_isAuthenticated)
                {
                    @if (_isMember)
                    {
                        <a class="btn btn-sm fw-bold px-4 @(IsActive("/orders") ? "btn-primary active" : "btn-outline-primary")"
                           href="/orders">
                            Orders
                        </a>
                        <a class="btn btn-sm fw-bold px-4 @(IsActive("/members/profile") ? "btn-primary active" : "btn-outline-primary")"
                           href="/members/profile">
                            Profile
                        </a>
                    }
                    else
                    {
                        <a class="btn btn-sm fw-bold px-4 @(IsActive("/members") ? "btn-primary active" : "btn-outline-primary")"
                           href="/members">Members</a>
                        <a class="btn btn-sm fw-bold px-4 @(IsActive("/sales-report") ? "btn-primary active" : "btn-outline-primary")"
                           href="/sales-report">Sale statistics</a>
                        <a class="btn btn-sm fw-bold px-4 @(IsActive("/orders") ? "btn-primary active" : "btn-outline-primary")"
                           href="/orders">Orders</a>
                        <a class="btn btn-sm fw-bold px-4 @(IsActive("/products") ? "btn-primary active" : "btn-outline-primary")"
                           href="/products">Products</a>
                    }

                    <a class="btn btn-sm btn-outline-primary px-4 @(IsActive("/logout") ? "active" : "")"
                       href="/logout">
                        Logout
                    </a>
                }
            </ul>
        </div>
    </div>
</nav>

@code {

    private bool _isAuthenticated = false;
    private bool _isMember = false;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        _isAuthenticated = user.Identity?.IsAuthenticated ?? false;
        _isMember = user.IsInRole("Member"); // Kiểm tra role của user
    }

    private bool IsActive(string href)
    {
        var currentUri = Navigation.Uri;
        var baseUri = Navigation.BaseUri;
        var relativeUri = currentUri.Replace(baseUri, "/");
        return relativeUri.TrimEnd('/').Equals(href.TrimEnd('/'), StringComparison.OrdinalIgnoreCase);
    }

}